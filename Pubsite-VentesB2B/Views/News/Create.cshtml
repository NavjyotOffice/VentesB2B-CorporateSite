@model Pubsite_VentesB2B.Models.News
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TemplateLayout.cshtml";
}
<h2>Create</h2>
@using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewsType, "News Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x=>x.N_Type, "Select News Type", new { @class = "form-control", @Required="required" })
                @Html.ValidationMessageFor(model => model.NewsType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.Title, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentDetail.Title, new { htmlAttributes = new { @class = "form-control", @Required="required" } })
                @Html.ValidationMessageFor(model => model.ContentDetail.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ContentDetail.Description, new { @class = "form-control col-md-12", @rows = 5, @Required="required" })
                @Html.ValidationMessageFor(model => model.ContentDetail.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.URL, "URL Link", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentDetail.URL, new { htmlAttributes = new { @class = "form-control", @pattern="https?://.+", @Required="required" } })
                @Html.ValidationMessageFor(model => model.ContentDetail.URL, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.Author, "Author", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentDetail.Author, new { htmlAttributes = new { @class = "form-control", @Required="required"} })
                @Html.ValidationMessageFor(model => model.ContentDetail.Author, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.Keywords, "Keywords", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentDetail.Keywords, new { htmlAttributes = new { @class = "form-control", @Required="required" } })
                @Html.ValidationMessageFor(model => model.ContentDetail.Keywords, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.Upload, "Banner Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ContentDetail.Upload, new { type = "file" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.ContentDetail.PublishDate, "Publish Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentDetail.PublishDate, new { htmlAttributes = new { @class = "form-control date-inputmask" } })
                @Html.ValidationMessageFor(model => model.ContentDetail.PublishDate, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.NewsDate, "News Date", htmlAttributes: new { @class = "control-label col-md-2", @max = "new Date().toISOString().split('T')[0]", @Required="required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewsDate, new { htmlAttributes = new { @class = "form-control date-inputmask" } })
                @Html.ValidationMessageFor(model => model.NewsDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.ContentDetail.HideOnSite)
                @Html.LabelFor(model => model.ContentDetail.HideOnSite, "Hide On Site", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    document.getElementById('NewsDate').max = new Date(new Date().getTime() - new Date().getTimezoneOffset() * 60000).toISOString().split("T")[0];
</script>